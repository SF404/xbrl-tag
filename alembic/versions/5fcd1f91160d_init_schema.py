"""init schema

Revision ID: 5fcd1f91160d
Revises: 
Create Date: 2025-09-07 23:35:37.371807

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5fcd1f91160d'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('embedders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('version', sa.String(), nullable=True),
    sa.Column('path', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_embedders'))
    )
    op.create_index(op.f('ix_embedders_id'), 'embedders', ['id'], unique=False)
    op.create_table('rerankers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('version', sa.String(), nullable=True),
    sa.Column('path', sa.Text(), nullable=True),
    sa.Column('normalize_method', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_rerankers'))
    )
    op.create_index(op.f('ix_rerankers_id'), 'rerankers', ['id'], unique=False)
    op.create_table('taxonomies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('taxonomy', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('source_file', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_taxonomies')),
    sa.UniqueConstraint('taxonomy', name=op.f('uq_taxonomies_taxonomy'))
    )
    op.create_index(op.f('ix_taxonomies_id'), 'taxonomies', ['id'], unique=False)
    op.create_table('feedbacks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('taxonomy_id', sa.Integer(), nullable=True),
    sa.Column('query', sa.Text(), nullable=True),
    sa.Column('reference', sa.Text(), nullable=True),
    sa.Column('tag', sa.String(), nullable=True),
    sa.Column('is_correct', sa.Boolean(), nullable=True),
    sa.Column('is_custom', sa.Boolean(), nullable=True),
    sa.Column('rank', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['taxonomy_id'], ['taxonomies.id'], name=op.f('fk_feedbacks_taxonomy_id_taxonomies'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_feedbacks'))
    )
    op.create_index(op.f('ix_feedbacks_id'), 'feedbacks', ['id'], unique=False)
    op.create_table('settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('active_embedder_id', sa.Integer(), nullable=True),
    sa.Column('active_reranker_id', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['active_embedder_id'], ['embedders.id'], name=op.f('fk_settings_active_embedder_id_embedders')),
    sa.ForeignKeyConstraint(['active_reranker_id'], ['rerankers.id'], name=op.f('fk_settings_active_reranker_id_rerankers')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_settings'))
    )
    op.create_index(op.f('ix_settings_id'), 'settings', ['id'], unique=False)
    op.create_table('taxonomy_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('taxonomy_id', sa.Integer(), nullable=True),
    sa.Column('tag', sa.String(), nullable=True),
    sa.Column('datatype', sa.String(), nullable=True),
    sa.Column('reference', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['taxonomy_id'], ['taxonomies.id'], name=op.f('fk_taxonomy_entries_taxonomy_id_taxonomies'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_taxonomy_entries'))
    )
    op.create_index(op.f('ix_taxonomy_entries_id'), 'taxonomy_entries', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_taxonomy_entries_id'), table_name='taxonomy_entries')
    op.drop_table('taxonomy_entries')
    op.drop_index(op.f('ix_settings_id'), table_name='settings')
    op.drop_table('settings')
    op.drop_index(op.f('ix_feedbacks_id'), table_name='feedbacks')
    op.drop_table('feedbacks')
    op.drop_index(op.f('ix_taxonomies_id'), table_name='taxonomies')
    op.drop_table('taxonomies')
    op.drop_index(op.f('ix_rerankers_id'), table_name='rerankers')
    op.drop_table('rerankers')
    op.drop_index(op.f('ix_embedders_id'), table_name='embedders')
    op.drop_table('embedders')
    # ### end Alembic commands ###
